/* entire container, keeps perspective */
.flip-container {
	perspective: 1000;
    /* For Firefox <= 15 to apply perspective. Without these two lines transformation will be flat.
    This fix, however, doesnâ€™t apply if we put overflow property on the element being fixed.
    */
    -moz-transform: perspective(1000px);
    -moz-transform-style: preserve-3d; 
    -webkit-transform: perspective(1000px);
    -webkit-transform-style: preserve-3d; 
}
/* flip the pane when hovered */
/*.flip-container:hover .flipper,*/
.flip-container.hover .flipper {
	-webkit-transform: rotateY(180deg);
	transform: rotateY(180deg);
}

.flip-container, .front, .back {
	width: 320px;
	height: 100px;
}

/* flip speed goes here */
.flipper, .hover {
	transition: 0.6s;
	transform-style: preserve-3d;

	position: relative;
}

/* hide back of pane during swap */
.front, .back {
	backface-visibility: hidden;

	position: absolute;
	top: 0;
	left: 0;
}
.flip-container.hover .front{
	transition: 0.6s;
	z-index: 1;
}
.flip-container.hover .back{
	transition: 0.6s;
	z-index: 2;
}
.flip-container .front{
	transition: 0.6s;
	z-index: 2;
}
.flip-container .back{
	transition: 0.6s;
	z-index: 1;
}

/* front pane, placed above back */
.front {
	z-index: 2;
	/* for firefox 31 */
	transform: rotateY(0deg);

    /*Fix for Chrome, version <= 22*/    
    -webkit-transform: rotateY(0deg);

    -webkit-transform: translate3d(0, 0, 0);
    /* or this
    -webkit-transform: translate3d(0, 0, 0);
     any property that triggers hardware acceleration will do the trick
    */
}

/* back, initially hidden pane */
.back {
	-webkit-transform: rotateY(180deg);
	transform: rotateY(180deg);
}

